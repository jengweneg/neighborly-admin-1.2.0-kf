- @title = t('.title')
.admin
  .row
    = render 'neighborly/admin/layouts/menu'
    section.content.large-12.columns
      .filters
        = form_tag financials_path, method: :get, class: 'form-horizontal' do |f|
          .large-4.columns
            = label_tag :by_permalink, t('.permalink')
            = text_field_tag :by_permalink, params[:by_permalink], class: 'input-small'
          .large-4.columns
            = label_tag :between_expires_at_start_at, t('.between_expires_at')
            = text_field_tag 'between_expires_at[start_at]', (params[:between_expires_at][:start_at] if params[:between_expires_at].present?), class: 'input-small'
            | &nbsp;
            | &nbsp;
            = text_field_tag 'between_expires_at[ends_at]', (params[:between_expires_at][:ends_at] if params[:between_expires_at].present?), class: 'input-small'
          .large-4.columns
            = label_tag :by_progress, t('.by_progress')
            = text_field_tag :by_progress, params[:by_progress], class: 'input-small'
          .large-4.columns
            = label_tag :name_contains, t('.project')
            = text_field_tag :name_contains, params[:name_contains]
          .large-6.columns
            = label_tag :user_name_contains, t('.user')
            = text_field_tag :user_name_contains, params[:user_name_contains]
          .large-6.columns
            = label_tag :with_state, t('.with_state')
            = select_tag :with_state, options_for_select(Project.state_names, params[:with_state]), include_blank: true
          .large-12.columns.text-right
            = submit_tag t('.submit'), class: 'button'
            | &nbsp;
            = link_to t('.download_search_report'), financials_path(params: params.to_enum.to_h.except(:action, :controller), format: :csv), class: 'button secondary'
      .row
        .large-6.columns.text-left
          = paginate @projects
        .large-6.columns.text-right
          = pluralize_without_number @projects.count, t('words.found_singular'), t('words.found_plural')
          | &nbsp;
          strong= collection.count
          | &nbsp;
          = pluralize_without_number(@projects.count, t('words.project_singular'), t('words.project_plural')).downcase
      .data-table
        - if @projects.empty?
          = t('.no_contributions')
        - else
          table
            thead
              tr
                th style="width: 200px;"
                  = t('.name')
                th= t('.user')
                th= t('.goal')
                th= t('.pledged')
                th= t('.total_payment_service_fee')
                th= t('.total_platform_fee')
                th= t('.repass_value')
                th= t('.expires_at')
                th= t('.reports')
                th= t('.state')
            tbody
              - @projects.each do |project|
                tr id=project.id
                  td= link_to project.name, main_app.project_path(project), target: 'blank'
                  td= link_to project.user.display_name, main_app.user_path(project.user, anchor: :settings), target: '_blank'
                  td= project.display_goal
                  td= project.display_pledged
                  td= number_to_currency project.total_payment_service_fee, precision: 2
                  - platform_fee = Configuration[:platform_fee].to_f * project.pledged
                  td
                    = number_to_currency platform_fee, precision: 2
                  td
                    = number_to_currency ((project.pledged*0.87)), precistion: 2
                  td
                    = project.display_expires_at
                  td
                    = link_to t('.contribution_report'), reports_contribution_reports_path(project_id: project.id, format: :csv)
                  td
                    - if project.online?
                      span.label.label-online= project.state
                    - elsif project.successful?
                      span.label.label-success= project.state
                    - elsif project.failed? or project.rejected?
                      span.label.label-important= project.state
                    - elsif project.waiting_funds?
                      span.label.label-warning= project.state
                    - else
                      span.label= project.state
        = paginate @projects
